package cn.adwalker.model.common.dao.impl;import java.util.List;import javax.annotation.Resource;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.stereotype.Repository;import cn.adwalker.model.common.dao.ISendMailDao;import cn.adwalker.model.news.domain.Mail;@Repositorypublic class SendMailDaoImpl implements ISendMailDao {	@Resource	private JdbcTemplate jdbcTemplate;	@Override	public List<Mail> findNotSend(Long id) {		StringBuffer sql = new StringBuffer();		sql.append("select * from T_PLATFORM_MAIL where id= ?");		return jdbcTemplate.query(sql.toString(), new BeanPropertyRowMapper<Mail>(Mail.class), new Object[] { id });	}	@Override	public List<Mail> findDevEmails() {		String sql = "select DISTINCT email from t_developer";		return jdbcTemplate.query(sql, new BeanPropertyRowMapper<Mail>(Mail.class));	}	@Override	public List<Mail> findAdvEmails() {		StringBuffer sql = new StringBuffer();		sql.append("select email from user_advertiser");		return jdbcTemplate.query(sql.toString(), new BeanPropertyRowMapper<Mail>(Mail.class));	}	@Override	public int updateMail(Long id, String date) {		StringBuffer sql = new StringBuffer();		if (id != null) {			sql.append(" update T_PLATFORM_MAIL set del=1");			sql.append(", update_time = DATE_FORMAT('");			sql.append(date);			sql.append("','%Y-%m-%d %T')");			sql.append("where id = " + id);		}		return jdbcTemplate.update(sql.toString());	}}