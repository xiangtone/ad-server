/** * <p>Title: AppStyleDaoImpl.java</p> * <p>Description: </p> * <p>Copyright: Copyright (c) </p> * <p>Company: adwalker</p> * @author jiangwei * @date Aug 22, 2012 * @version 1.0 */package cn.adwalker.model.common.dao.impl;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.Map;import org.springframework.jdbc.core.BeanPropertyRowMapper;import org.springframework.stereotype.Repository;import cn.adwalker.core.repository.impl.BaseDaoImpl;import cn.adwalker.model.app.domain.ClusterAdConfig;import cn.adwalker.model.common.dao.IClusterAdConfigDao;/** * <p> * Title: AppStyleDaoImpl * </p> * <p> * Description: * </p> * <p> * Company: adwalker * </p> *  * @author jiangwei * @date Aug 22, 2012 */@Repository()public class ClusterAdConfigDaoImpl extends BaseDaoImpl<ClusterAdConfig> implements IClusterAdConfigDao{	public ClusterAdConfigDaoImpl() {		setTableName("t_config_cluster_ad");	}	/**	 * (non-Javadoc)	 * <p>	 * Title: getPageByAppId	 * </p>	 * 	 * @param app_id	 * @return	 * @see cn.adwalker.model.common.dao.IPageDao#getPageByAppId(java.lang.Long)	 */	@Override	public List<String> getPageByAppId(Long app_id) {		List<String> resultList = new ArrayList<String>();		String sql = "select type.name name from T_PAGE page  left join T_TYPE  type on page.type_id=type.id where  page.status>=0 and  page.app_id=?";		List<Map<String, Object>> list = jdbcTemplate.queryForList(sql, new Object[] { app_id });		for (Map<String, Object> map : list) {			resultList.add((String) map.get("name"));		}		return resultList;	}	@Override	public void saveOrUpdate(Long app_id, String arr[]) {		if (app_id!=null) {			List<ClusterAdConfig> oldList = this.findByApp(app_id,null);			init(app_id,oldList);//先初始化，保证所有的值都有---初始化放应用审核的地方			if (app_id != null && arr != null && arr.length > 0) {				List<Object[]> parameters = new ArrayList<Object[]>();				if (oldList != null && oldList.size() > 0) {					jdbcTemplate.update("update t_config_cluster_ad set status=? where app_id=?",new Object[]{-1,app_id});					for (String s:arr) {						for (ClusterAdConfig c : oldList) {							if (s.equals(c.getRes_code())) {									parameters.add(new Object[] { 1, c.getId() });									break;							} 													}					}															jdbcTemplate.batchUpdate("update t_config_cluster_ad set STATUS=? where id=?", parameters);				} 			}				}			}				private void init(Long app_id,List<ClusterAdConfig> oldList){		String typeArr[] = new String[] { "ADWALKER", "YOUMI", "CHUKONG", "KUAIYOU"};		boolean flag=false;		List<Object[]> parameters = new ArrayList<Object[]>();		for (String s : typeArr) {			for (ClusterAdConfig c:oldList) {				if (s.equals(c.getRes_code())) {					flag=true;					break;				}			}			if (!flag) {				parameters.add(new Object[] { app_id, s, -1, new Date()});			}		}				if (parameters!=null&&parameters.size()>0) {			jdbcTemplate.batchUpdate("insert into t_config_cluster_ad (APP_ID,RES_CODE,STATUS,CREATE_TIME) values (?,?,?,?)", parameters);		}	}	private List<ClusterAdConfig> findByApp(Long app_id,Integer status) {		List<ClusterAdConfig> list = null;		if (app_id != null) {			String sql = " select * from t_config_cluster_ad  where app_id = " + app_id;			if (status!=null) {				sql=sql+" and status="+status;			}			list = jdbcTemplate.query(sql, new BeanPropertyRowMapper<ClusterAdConfig>(ClusterAdConfig.class));		}		return list;	}		@Override	public String findByApp(Long app_id) {		String s=null;		if (app_id!=null) {			List<ClusterAdConfig>	 list= this.findByApp(app_id,1);			if (list != null && list.size() > 0) {				StringBuilder sb = new StringBuilder();				for (ClusterAdConfig c : list) {					sb.append(c.getRes_code() + ",");				}				sb = sb.deleteCharAt(sb.length() - 1);				s=sb.toString();			}					}		return s;	}}