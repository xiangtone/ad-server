<?xml version="1.0" encoding="UTF-8"?>
<!--build.xml add by jief 2014-05-29  -->
<project name="Ad_API" basedir="." default="deploy-web">
	<property environment="env" />
	<!--取window,unix...的环境变量-->
	<property name="java.home" 				value="${env.JAVA_HOME}" />
	<property name="tomcat.home" 			value="${env.CATALINA_HOME}" />
	<property name="project.name"         	value="Ad_API" />
	<property name="src.dir" 				value="../../src" />
	<property name="webroot.dir" 			value="../" />
	<property name="build.dir"         		value="${basedir}/build" />
	<property name="webapp.dir"        		value="${build.dir}/${project.name}" />
	<property name="lib.dir" 		  		value="${basedir}/lib" />

	<!--测试用的-->
	<target name="test">
		<echo level="info">${compile.optimize}</echo>
	</target>

	<!--定义classpath-->
	<path id="base.path">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="java.path">
		<fileset dir="${java.home}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="tomcat.path">
		<!--此处需要tomcat jar-->
		<fileset dir="${tomcat.home}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<target name="init" description="defines custom tasks">
		<!-- 判断ant的版本为 Ant 1.6.2+ -->
		<available classname="org.apache.tools.ant.DynamicAttribute" property="ant-1.6.2"/>
		<fail unless="ant-1.6.2" message="Ad_API requires Ant 1.6.2 for faster unit testing"/>

		<!--删除build文件-->
		<echo level="info">清空build目录</echo>
		<delete dir="${build.dir}"/>
	</target>

	<!-- 检查日期 -->
	<target name="prepare" depends="init" description="预备创建目标">
		<tstamp/>
		<tstamp>
			<format property="copyright.year" pattern="yyyy"/>
		</tstamp>
		<echo message="Preparing target directory '${build.dir}'"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${webapp.dir}"/>
		<mkdir dir="${webapp.dir}/WEB-INF"/>
	</target>
	<!--编译src 下java 文件-->
	<target name="compile-src" depends="prepare" description="编译src">
		<sequential>
			<echo>compile src interface ...</echo>
			<delete dir="${webapp.dir}/WEB-INF/classes"/>
			<mkdir dir="${webapp.dir}/WEB-INF/classes"/>
			<copy todir="${webapp.dir}/WEB-INF/classes/">
				<fileset dir="${src.dir}" >
					<include name="**/*.xml" />
					<include name="**/*.properties" />
				</fileset>
			</copy>
			<javac srcdir="${src.dir}/cn" 
			 	    destdir="${webapp.dir}/WEB-INF/classes"
				    debug="${compile.debug}"
				    deprecation="${compile.deprecation}"
				    optimize="${compile.optimize}"
			 		encoding="UTF-8">
				<classpath refid="base.path"/>
				<classpath refid="java.path"/>
				<classpath refid="tomcat.path"/>
			</javac>
		</sequential>
	</target>
	<!--部署部署成一个完整的项目-->
	<target name="deploy-web" depends="compile-src" description="组装成一个完整的web项目">

		<!-- 拷贝WEB-INFO/jsp到 编译的项目下  -->
		<copy todir="${webapp.dir}/WEB-INF">
			<fileset dir="${basedir}/">
				<exclude name="build/"/>
				<exclude name="**/.svn/"/>
			</fileset>
		</copy>
		<!-- 拷贝WEB-INFO/lib到 编译的项目下  -->
		<copy todir="${webapp.dir}/">
			<fileset dir="${webroot.dir}/">
				<include name="*.jsp" />
			</fileset>
		</copy>
	</target>
	<target name="zip-web" depends="deploy-web" description="将编译好的文件打zip包">
		<!--将编译好的文件打zip包-->
		<zip destfile="${build.dir}/${project.name}.zip">
			<fileset dir="${webapp.dir}">
			</fileset>
		</zip>
	</target>

	<!--如果想省事的话直接编译src 后替换到 WEB-INF 下的class 文件中去-->
	<target name="direct-compile" depends="" description="直接编译src替换了classes">
		<sequential>
			<echo>compile src interface ...</echo>
			<delete dir="${webroot.dir}/WEB-INF/classes"/>
			<mkdir dir="${webroot.dir}/WEB-INF/classes"/>
			<copy todir="${webroot.dir}/WEB-INF/classes/">
				<fileset dir="${src.dir}" >
					<include name="**/*.xml" />
					<include name="**/*.properties" />
				</fileset>
			</copy>
			<javac srcdir="${src.dir}/cn" 
			 	    destdir="${webroot.dir}/WEB-INF/classes"
				    debug="${compile.debug}"
				    deprecation="${compile.deprecation}"
				    optimize="${compile.optimize}"
			 		encoding="UTF-8">
				<classpath refid="base.path"/>
				<classpath refid="java.path"/>
				<classpath refid="tomcat.path"/>
			</javac>
		</sequential>
	</target>
</project>
